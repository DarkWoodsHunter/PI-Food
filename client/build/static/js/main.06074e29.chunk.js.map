{"version":3,"sources":["Components/LandingPage.jsx","Components/Recipe.jsx","Actions/index.js","Components/SearchBar.jsx","Components/Paginated.jsx","Components/Home.jsx","Components/CreateRecipe.jsx","App.js","reportWebVitals.js","reducer/index.js","Store/Index.js","index.js"],"names":["LandingPage","className","to","Recipe","id","image","name","healthScore","diets","src","alt","width","map","tdiet","charAt","toUpperCase","slice","GET_RECIPES","GET_RECIPE_BY_NAME","GET_RECIPE_DETAILS","GET_DIET","POST_RECIPE","FILTER_BY_DIET","ORDER_BY_ALPHABET","ORDER_BY_SCORE","CLEAR_DETAIL","CLEAR_RECIPES","PAGINATED_ACTION","getRecipes","dispatch","axios","get","res","type","payload","data","console","log","getDiet","SearchBar","useDispatch","useState","input","setInput","handleSummit","event","preventDefault","alert","placeholder","value","onChange","target","handleChange","onClick","Paginated","recipes","useSelector","state","recipePerPage","pageNumbers","allRecipes","length","handlePaginated","parseInt","innerHTML","i","Math","ceil","push","current","Home","currentPage","recipesPage","indexLastEle","indexFistEle","currentRecipes","useEffect","handleFilterDiet","handleOrderAlphabetic","handleOrderScore","defaultValue","disable","recipe","number","CreateRecipe","history","useHistory","dietType","instructions","setInstructions","errors","setErrors","summary","steps","validUrl","validate","find","ele","toLowerCase","includes","lenght","test","diet","Object","keys","error","values","post","newRecipe","onSubmit","step","num","ida","Set","handleSelect","disabled","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","recipeDetails","rootReducer","action","filterByDiet","filter","r","some","sortAlphabet","sort","a","b","sortScore","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06074e29.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LandingPage() {\r\n    return (\r\n        <div className=\"landing\">\r\n            <div>\r\n                <h1>PI FOOD</h1>\r\n                <Link to=\"/home\">\r\n                    <button>Click to Home</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import { useDispatch } from \"react-redux\";\r\n\r\n\r\nexport default function Recipe({id, image, name, healthScore, diets}){\r\n    //const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div>\r\n            <Link to={`/home/${id}`}>\r\n                <div>\r\n                    <h3>{name}</h3>\r\n                    <image src={image} alt=\"Recipe\" width=\"300px\"/>\r\n                    <div>\r\n                        <label>Health Score: <span>{healthScore}</span></label>\r\n                    </div>\r\n                    <label>Diets: </label>\r\n                    {diets?.map((tdiet) => (\r\n                        <p key={tdiet}>\r\n                            {tdiet.charAt(0).toUpperCase() + tdiet.slice(1)}\r\n                        </p>\r\n                    ))}\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport const GET_RECIPES = \"GET_RECIPES\";\r\nexport const GET_RECIPE_BY_NAME = \"GET_RECIPE_BY_NAME\";\r\nexport const GET_RECIPE_DETAILS = \"GET_RECIPE_DETAILS\";\r\nexport const GET_DIET = \"GET_DIET\";\r\nexport const POST_RECIPE = \"POST_RECIPE\"\r\nexport const FILTER_BY_DIET = \"FILTER_BY_DIET\";\r\nexport const ORDER_BY_ALPHABET = \"ORDER_BY_ALPHABET\";\r\nexport const ORDER_BY_SCORE = \"ORDER_BY_SCORE\";\r\n//export const CREATE_RECIPE = \"CREATE_RECIPE\";\r\nexport const CLEAR_DETAIL = \"CLEAR_DETAIL\";\r\nexport const CLEAR_RECIPES = \"CLEAR_RECIPES\";\r\nexport const PAGINATED_ACTION = \"PAGINATED_ACTION\";\r\n\r\n\r\n\r\nexport function getRecipes() {\r\n    return async function(dispatch){\r\n        try {\r\n            const res = await axios.get(\"/recipes\");\r\n            return dispatch({\r\n                type: GET_RECIPES,\r\n                payload: res.data,\r\n            });\r\n        } catch (error){\r\n            console.log(\"error in Action getRecipes\");\r\n        }\r\n    }\r\n};\r\n//-----SEARCH BAR\r\nexport function getRecipeByName(name) {\r\n    return async function(dispatch){\r\n        try {\r\n            const res = await axios.get(`/recipes/?name=${name}`)\r\n            return dispatch({\r\n                type: GET_RECIPE_BY_NAME,\r\n                payload: res.data,\r\n            });\r\n        } catch(error) {\r\n            alert(\"No se encuentra la receta\");\r\n        }\r\n    }\r\n}\r\n\r\nexport function getRecipeByDetail(detail) {\r\n    return async function(dispatch){\r\n        try{\r\n            const res = await axios.get(`/recipes/${detail}`)\r\n            return dispatch({\r\n                type: GET_RECIPE_DETAILS,\r\n                payload: res.data,\r\n            })\r\n        } catch (error) {\r\n            console.log(\"Error in Action getRecipeByDetail\", error);\r\n        }\r\n    }\r\n}\r\n\r\n//-----Formulario\r\nexport function getDiet() {\r\n    return async function(dispatch){\r\n        try{\r\n            const res = await axios.get(\"/diets\")\r\n            return dispatch({\r\n                type: GET_DIET,\r\n                payload: res.data,\r\n            })\r\n        } catch (error) {\r\n            console.log(\"Error in Actions getDiet\",error);\r\n        }\r\n    } \r\n}\r\n\r\nexport function postRecipe(payload){\r\n    return async function (){\r\n        try{\r\n            const newRecipe = await axios.post(\"/recipes\", payload);\r\n            return newRecipe;\r\n        } catch (error) {\r\n            console.log(\"Error in Actions postRecipe\", error)\r\n        }\r\n    }\r\n}\r\n\r\n//-----Filtrado\r\nexport function filterbyDiet(payload) {\r\n    return {\r\n        type: FILTER_BY_DIET,\r\n        payload,\r\n    }\r\n};\r\n\r\n\r\n//-----Ordenamiento\r\nexport function orderByAlphabet(payload) {\r\n    return {\r\n        type: ORDER_BY_ALPHABET,\r\n        payload,\r\n    }\r\n};\r\n\r\nexport function orderByScore(payload) {\r\n    return {\r\n        type: ORDER_BY_SCORE,\r\n        payload, \r\n    }\r\n}\r\n/**\r\nexport function createRecipe(payload) {\r\n    return async function(dispatch){\r\n        try {\r\n            let res = await axios.post(`/recipe`, payload);\r\n            return dispatch({\r\n                type: \"CREATE_RECIPE\",\r\n                payload: res,\r\n            })\r\n        } catch (error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n**/\r\n\r\nexport function clearDetail() {\r\n    return {\r\n        type: CLEAR_DETAIL\r\n    }\r\n}\r\n\r\nexport function clearRecipes() {\r\n    return {\r\n        type: CLEAR_RECIPES,\r\n        payload: []\r\n    }\r\n}\r\n\r\nexport function paginatedAction(payload) {\r\n    return {\r\n        type: PAGINATED_ACTION,\r\n        payload,\r\n    };\r\n}","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { getRecipeByName } from \"../Actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function SearchBar() {\r\n    const dispatch = useDispatch();\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    let handleChange = (event) => {\r\n        event.preventDefault();\r\n        setInput(event.target.value);\r\n    }\r\n\r\n    let handleSummit = (event) => {\r\n        event.preventDefault();\r\n        dispatch(getRecipeByName(input));\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <h1>PI FOOD</h1>\r\n            </div>\r\n\r\n            <div>\r\n                <input type=\"search\" placeholder=\"Search Recipe\" value={input} onChange={event => handleChange(event)}/>\r\n                <button type=\"submit\" onClick={event => handleSummit(event)}>Search</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { paginatedAction } from \"../Actions\";\r\n\r\n\r\nexport default function Paginated () {\r\n    const dispatch = useDispatch();\r\n    const recipes = useSelector(state => state.recipes)\r\n    const recipePerPage = useSelector(state => state.recipePerPage)\r\n    //const currentPage = useSelector(state => state.currentPage)\r\n\r\n    const pageNumbers = [];\r\n    const allRecipes = recipes?.length;\r\n\r\n    const handlePaginated = (event) => {\r\n        dispatch(paginatedAction(parseInt(event.target.innerHTML)))\r\n    }\r\n\r\n    for (let i = 1; i <= Math.ceil(allRecipes / recipePerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {pageNumbers?.map((current) => {\r\n                    return <button onClick={handlePaginated} key={current}>{current}</button>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\nexport default function paginated({recipesPage, allRecipes, paged, setPage, page}) {\r\n    const [input, setInput] = useState;\r\n\r\n    const goBack = () => {\r\n        setInput(parseInt(input) - 1);\r\n        setPage(parseInt(input) - 1)\r\n    }\r\n\r\n    const goFoward = () => {\r\n        setInput(parseInt(input) + 1);\r\n        setPage(parseInt(input) + 1)\r\n    }\r\n\r\n    const currentPage = (current) => {\r\n        setInput(parseInt(current));\r\n        paged(current)\r\n    }\r\n\r\n    const totalPages = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(allRecipes / recipesPage); i++) {\r\n        totalPages.push(i)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={goBack()} disabled={page <= 1}> ⮜ </button>\r\n            {\r\n                <nav>\r\n                    <ul>\r\n                        {\r\n                            totalPages?.map((place) => {\r\n                                return(\r\n                                    <li key = {place}>\r\n                                    <button onClick={() => currentPage(place)}>{place}</button>\r\n                                    </li>\r\n                                )})\r\n                        }\r\n                    </ul>\r\n                </nav>\r\n            }\r\n            <button onClick={goFoward()} disabled={totalPages === totalPages.length}> ⮞ </button>\r\n        </div>\r\n    )\r\n} **/","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\nimport Recipe from \"./Recipe\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Paginated from \"./Paginated\";\r\nimport { getRecipes, filterbyDiet, orderByAlphabet, orderByScore, getDiet, clearRecipes } from \"../Actions/index\";\r\n\r\nexport default function Home () {\r\n    const dispatch = useDispatch();\r\n    const allRecipes = useSelector((state) => state?.recipes)\r\n    //test\r\n\r\n    //-----Paginated\r\n    const currentPage = useSelector(state => state.currentPage);\r\n    const recipesPage = useSelector(state => state.recipesPage);\r\n    const indexLastEle = currentPage * recipesPage;\r\n    const indexFistEle = indexLastEle - recipesPage;\r\n    const currentRecipes =allRecipes?.slice(indexFistEle, indexLastEle);\r\n\r\n    useEffect(() => {\r\n        if (currentRecipes.length === 0){\r\n            dispatch(getRecipes())\r\n            dispatch(getDiet())\r\n        }\r\n    }, [dispatch, currentRecipes])\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        dispatch(clearRecipes())\r\n        //\r\n    }\r\n\r\n    const handleFilterDiet = (event) => {\r\n        event.preventDefault()\r\n        dispatch(filterbyDiet(event.target.value));\r\n    }\r\n\r\n    const handleOrderAlphabetic = (event) => {\r\n        event.preventDefault()\r\n        dispatch(orderByAlphabet(event.target.value))\r\n    }\r\n\r\n    const handleOrderScore = (event) => {\r\n        event.preventDefault()\r\n        dispatch(orderByScore(event.target.value))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <SearchBar></SearchBar>\r\n            </div>\r\n            \r\n            <div>\r\n                <div>\r\n                    <select name=\"alphabetical\" onChange={(event) => handleOrderAlphabetic(event)} defaultValue=\"default\">\r\n                        <option value=\"default\" disable>Alphabetical Order</option>\r\n                        <option value=\"atoz\">A to Z</option>\r\n                        <option value=\"no atoz\">Z to A</option>\r\n                    </select>\r\n\r\n                    <select name=\"numerical\" onChange={(event) => handleOrderScore(event)} defaultValue=\"default\">\r\n                        <option value=\"default\" disable>Health Score Order</option>\r\n                        <option value=\"asc\">Ascendent Order</option>\r\n                        <option value=\"desc\">Descendent Order</option>\r\n                    </select>\r\n\r\n                    <select name=\"diets\" onChange={(event) => handleFilterDiet(event)} defaultValue=\"default\">\r\n                        <option value=\"default\" disable>Select Diet...</option>\r\n                        <option value=\"gluten free\">Gluten Free</option>\r\n                        <option value=\"ketogenic\">Ketogenic</option>\r\n                        <option value=\"vegetarian\">Vegetarian</option>\r\n                        <option value=\"lacto vegetarian\">Lacto Vegetarian</option>\r\n                        <option value=\"ovo vegetarian\">Ovo Vegetarian</option>\r\n                        <option value=\"vegan\">Vegan</option>\r\n                        <option value=\"pescatarian\">Pescatarian</option>\r\n                        <option value=\"paleo\">Paleo</option>\r\n                        <option value=\"primal\">Primal</option>\r\n                        <option value=\"low fodmap\">Low fodmap</option>\r\n                        <option value=\"whole 30\">Whole 30</option>\r\n                    </select>\r\n                    <button onClick={handleClick}>Reload</button>\r\n                </div>\r\n\r\n                <Paginated />\r\n\r\n                <div>\r\n                    <div>\r\n                        {currentRecipes?.length < 1 ? <loading />\r\n                        :currentRecipes?.map(recipe => \r\n                            <Recipe \r\n                            id={recipe.id} \r\n                            image={recipe.image}\r\n                            name={recipe.name}\r\n                            healthScore={recipe.healthScore}\r\n                            diets={recipe.diets}\r\n                            key={recipe.id}\r\n                            />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/**\r\nfunction Home (props){\r\n\r\n    //Show 9 recipes per page\r\n    const [page, setPage] = useState(1);\r\n    const recipePage = 9;\r\n    const totalRecipes = page * recipePage;\r\n    const firstRecipe = totalRecipes - recipePage;\r\n    const showRecipes = props.allRecipes.slice(firstRecipe, totalRecipes);\r\n\r\n    const currentPage = function(pageNumber){\r\n        setPage(pageNumber);\r\n    };\r\n\r\n    useEffect(() => {\r\n        props.getRecipes();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.getRecipes])\r\n\r\n    let handleClick = (event) => {\r\n        event.preventDefault();\r\n        props.getRecipes();\r\n    }\r\n    let handleFilterDiet = (event) => {\r\n        event.preventDefault();\r\n        props.filterbyDiet(event.target.value);\r\n    }\r\n\r\n    let hangleOrderAlphabet = (event) => {\r\n        event.preventDefault();\r\n        props.orderByAlphabet(event.target.value);\r\n    }\r\n\r\n    let handleOrderScore = (event) => {\r\n        event.preventDefault();\r\n        props.orderByScore(event.target.value);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h3>Home</h3>\r\n        </div>\r\n        <div>\r\n            <SearchBar/>\r\n            \r\n            <div>\r\n                <Link to=\"/recipe\">\r\n                    <button>Create Recipe</button>\r\n                </Link>\r\n            </div>\r\n\r\n            <div>\r\n                <select defaultValue={'all'} name='diets' onChange={event => handleFilterDiet(event)}>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"gluten free\">Gluten Free</option>\r\n                    <option value=\"ketogenic\">Ketogenic</option>\r\n                    <option value=\"vegetarian\">Vegetarian</option>\r\n                    <option value=\"lacto vegetarian\">Lacto Vegetarian</option>\r\n                    <option value=\"ovo vegetarian\">Ovo Vegetarian</option>\r\n                    <option value=\"vegan\">Vegan</option>\r\n                    <option value=\"pescatarian\">Pescatarian</option>\r\n                    <option value=\"paleo\">Paleo</option>\r\n                    <option value=\"primal\">Primal</option>\r\n                    <option value=\"low fodmap\">Low fodmap</option>\r\n                    <option value=\"whole 30\">Whole 30</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <select defaultValue={'DEFAULT'} name='Alphabetical' onChange={event => hangleOrderAlphabet(event)}>\r\n                    <option value=\"DEFAULT\" disabled> Alphabetical Order</option>\r\n                    <option value=\"atoz\">A to Z</option>\r\n                    <option value=\"No atoz\">Z to A</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div>\r\n                <select defaultValue={'DEFAULT'} name='numerical' onChange={event => handleOrderScore}>\r\n                    <option value=\"DEFAULT\" disabled> Order by Health Score</option>\r\n                    <option value=\"asc\">Lower to Higher</option>\r\n                    <option value=\"desc\">Higher to Lower</option>\r\n                </select>\r\n            </div>\r\n            <button onClick={handleClick()}>Clear</button>\r\n\r\n            {\r\n                props.allRecipes.length === 0 ?\r\n                <div>\r\n                    <h5>Loading...</h5>\r\n                </div>:\r\n                <div>\r\n                    {\r\n                        showRecipes?.map(recipe => {\r\n                            return (\r\n                                <div>\r\n                                    <Recipe\r\n                                        id={recipe.id}\r\n                                        image={recipe.image}\r\n                                        name={recipe.name} \r\n                                        healthScore={recipe.healthScore} \r\n                                        diets={recipe.diets}\r\n                                        key={recipe.id}\r\n                                    ></Recipe>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n            <hr></hr>\r\n            <div>\r\n                <Paginated recipesPage={recipePage} allRecipes={props.allRecipes.length} paged={currentPage} setPage={setPage} page={page}></Paginated>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        allRecipes: state.allRecipes,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getRecipes: () => dispatch(getRecipes()),\r\n        filterbyDiet: (payload) => dispatch(filterbyDiet(payload)),\r\n        orderByAlphabet: (payload) => dispatch(orderByAlphabet(payload)),\r\n        orderByScore: (payload) => dispatch(orderByScore(payload)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)**/","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { postRecipe, getDiet, getRecipes, clearDetail} from \"../Actions/index\";\r\nlet number = 0;\r\n\r\n\r\nexport default function CreateRecipe(){\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const allRecipes = useSelector(state => state.recipes);\r\n    const dietType = useSelector(state => state.diets);\r\n\r\n    const [instructions, setInstructions] = useState(\"\");\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [input, setInput] = useState({\r\n        name: \"\",\r\n        summary: \"\",\r\n        healthScore: \"\",\r\n        image: \"\",\r\n        steps: [],\r\n        diets: [],\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getDiet())\r\n    }, [dispatch]);\r\n\r\n    let validUrl = /(http(s?):)([/|.|\\w|\\s|-])*.(?:jpg|gif|png)/;\r\n    function validate(input) {\r\n        let errors = [];\r\n    \r\n        if(!input.name) {\r\n            errors.name = \"Enter a correct Name\";\r\n        } else if(allRecipes.find((ele) => ele.name.toLowerCase().includes(input.name.toLowerCase()))) {\r\n            errors.name = \"That name already exist\";\r\n        } else if(input.summary.lenght < 10 || !input.summary){\r\n            errors.summary = \"Enter a correct Summary\";\r\n        } else if (input.healthScore < 1 || input.healthScore > 100 || !input.healthScore) {\r\n            errors.healthScore = \"Enter a correct healthScore\";\r\n        } else if (!input.image || !validUrl.test(input.image)){\r\n            errors.image = \"Enter a valid URL\";\r\n        } else if (input.steps.lenght === 0){\r\n            errors.steps = \"Enter valid Recipe Steps\";\r\n        } else if (input.diet.lenght < 1){\r\n            errors.diet = \"Select at least 1 Diet\"\r\n        }\r\n        let result = Object.keys(errors).length > 0? errors: true;\r\n        return result;\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setInput({\r\n            ...input,\r\n            [event.target.name]: event.target.value\r\n        })\r\n        setErrors(\r\n            validate({\r\n            ...input,\r\n            [event.target.name]: event.target.value\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleChangeStep = (event) => {\r\n        const value = event.target.value;\r\n        setInstructions(value);\r\n    };\r\n\r\n    const handleAddStep = (event) => {\r\n        if (instructions){\r\n            setInput({\r\n                ...input,\r\n                steps: [...input.steps, { num: number++, step: `Step ${number}: ${instructions}`}]\r\n            });\r\n            setErrors(\r\n                validate({\r\n                    ...input,\r\n                    [event.target.name]: event.target.value,\r\n                })\r\n            );\r\n            setInstructions(\"\");\r\n        }\r\n    }\r\n\r\n    const handleSelect = (event) => {\r\n        setInput({\r\n            ...input,\r\n            diets: [...new Set([...input.diets, event.target.value])]\r\n        })\r\n        setErrors(\r\n            validate({\r\n                ...input,\r\n                [event.target.name]: event.target.value\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleSummit = (event) => {\r\n        event.preventDefault();\r\n        setErrors(validate(input));\r\n        const error = validate(input);\r\n\r\n        if (Object.values(error).length !== 0) {\r\n\r\n        } else {\r\n            dispatch(postRecipe(input));\r\n            setInput({\r\n                name: \"\",\r\n                summary: \"\",\r\n                healthScore: \"\",\r\n                image: \"\",\r\n                steps: [],\r\n                diets: [],\r\n            });\r\n            history.push(\"/home\");\r\n            dispatch(clearDetail());\r\n            dispatch(getRecipes());\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <form onSubmit={(event) => handleSummit(event)}>\r\n\r\n                    <div>\r\n                        <h2>Create your Recipe</h2>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Name: </label>\r\n                        <input type=\"text\" value={input.name} name=\"name\" onChange={(event) => handleChange(event)} placeholder=\"Insert Name...\"/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Summary: </label>\r\n                        <textarea type=\"text\" value={input.summary} name=\"summary\" onChange={(event) => handleChange(event)} placeholder=\"Insert Summary...\"/>\r\n                        {errors.summary && <h4>{errors.summary}</h4>}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Health Score: </label>\r\n                        <input type=\"number\" value={input.healthScore} name=\"healthScore\" onChange={(event) => handleChange(event)} placeholder=\"Insert a number between 1 and 100\"/>\r\n                        {errors.healthScore && <h4>{errors.healthScore}</h4>}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Image: </label>\r\n                        <input type=\"number\" value={input.image} name=\"image\" onChange={(event) => handleChange(event)} placeholder=\"Enter a URL...\"/>\r\n                        {errors.image && <h4>{errors.image}</h4>}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Steps: </label>\r\n                        <div>\r\n                            <textarea type=\"text\" value={input.steps.step} name=\"steps\" onChange={handleChangeStep} placeholder=\"Insert a Step...\"></textarea>\r\n                            <button type=\"button\" onClick={handleAddStep}>Add Step</button>\r\n                            \r\n                        </div>\r\n                        <div>\r\n                            {input.steps.map((ele, ida) => {\r\n                                return <div>\r\n                                    <p key={ida}>{`${ele.step}`}</p>\r\n                                    </div>\r\n                            })}\r\n                        </div>\r\n                        {errors.steps && <h4>{errors.steps}</h4>}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Diets: </label>\r\n                        <div>\r\n                            <select type=\"text\"  onChange={(event) => handleSelect(event)} defaultValue=\"default\">\r\n                                <option disabled value=\"default\" > Select Diets...</option>\r\n                                {dietType?.map((tdiet) => (\r\n                                    <option key={tdiet.id}>{tdiet.name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        {errors.diet && <h4>{errors.diet}</h4>}\r\n                    </div>\r\n\r\n                    <button type=\"summit\">Create Recipe</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n/**\r\nconst URL = (string) => {\r\n    let pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n    '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n    return !!pattern.test(string);\r\n}\r\n\r\nconst validName = (string) => {\r\n    let pattern = /^[a-zA-Z\\s]+$/;\r\n    return pattern.test(string);\r\n}\r\n\r\nconst validate = (input) => {\r\n    let errors = [];\r\n\r\n    if(!input.name) {\r\n        errors.name = \"Tiene que tener un Nombre\";\r\n    }\r\n\r\n    if(input.name && !validName(input.name)) {\r\n        errors.name = \"Nombre Invalido\";\r\n    }\r\n\r\n    if(!input.summary){\r\n        errors.summary = \"Debe tener una descripcion\";\r\n    }\r\n\r\n    if (input.healthScore < 1 || input.healthScore > 100) {\r\n        errors.healthScore = \"Debe ser entre 1 y 100\";\r\n    }\r\n\r\n    if (!input.image){\r\n        errors.image = \"Debe agregar una Imagen\";\r\n    }\r\n\r\n    if (input.image && !URL(input.image)){\r\n        errors.image = \"URL invalido\"\r\n    }\r\n\r\n    if (!input.steps){\r\n        errors.steps = \"Agrege los pasos de la receta\";\r\n    }\r\n\r\n    if (!input.diet.lenght){\r\n        errors.diet = \"Selecione una Dieta\"\r\n    }\r\n\r\n    if (input.diet && !validName(input.diet)){\r\n        errors.diet = \"Dieta Invalida\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\n\r\nfunction CreateRecipe(props) {\r\n    const history = useHistory();\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [input, setInput] = useState({\r\n        name: \"\",\r\n        summary: \"\",\r\n        healthScore: \"\",\r\n        image: \"\",\r\n        steps: \"\",\r\n        diets: [],\r\n        diet: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        props.getDiet()\r\n    }, []);\r\n\r\n    let handleChange = (event) => {\r\n        event.preventDefault();\r\n        setInput((lastInput) => {\r\n            const newInput = {\r\n                ...lastInput,\r\n                [event.target.name]: event.target.value,\r\n            }\r\n            setErrors(validate(newInput));\r\n            return newInput;\r\n        })\r\n    }\r\n\r\n    let handleSummit = (event) =>{\r\n        event.preventDefault();\r\n        if(Object.keys(errors).length === 0 && input.name !== \"\" && input.summary !== \"\"){\r\n            if (input.diet){\r\n                input.diet.push(input.diet.toLocaleLowerCase());\r\n            }\r\n            props.createRecipe(input);\r\n            setInput({\r\n                name: \"\",\r\n                summary: \"\",\r\n                healthScore: \"\",\r\n                image: \"\",\r\n                steps: \"\",\r\n                diets: [],\r\n                diet: \"\",\r\n            })\r\n            history.push('/home');\r\n        } else {\r\n            alert (\"Revisa los campos\");\r\n        }\r\n    }\r\n\r\n    let handleCheck = (event) =>{\r\n        let newArray  = input.diets;\r\n        let find = newArray.indexOf(event.target.value);\r\n\r\n        if (find >= 0){\r\n            newArray.splice(find, 1);\r\n        } else {\r\n            newArray.push(event.target.value);\r\n        }\r\n\r\n        setInput({\r\n            ...input,\r\n            diets: newArray,\r\n        })\r\n\r\n        setErrors(validate(input));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <h1>Crear Receta</h1>\r\n                </div>\r\n                <div>\r\n                    <hr></hr>\r\n                </div>\r\n            </div>\r\n\r\n            <form>\r\n                <div>\r\n                    <div><label>Name: </label></div>\r\n                    <input\r\n                        type={\"text\"}\r\n                        name={\"name\"}\r\n                        value={input.name}\r\n                        onChange={event => handleChange(event)}\r\n                    ></input>\r\n                    {!errors.name ? null : <p>{errors.name}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <div><label>Summary: </label></div>\r\n                    <input\r\n                        type={\"text\"}\r\n                        name={\"summary\"}\r\n                        value={input.summary}\r\n                        onChange={event => handleChange(event)}\r\n                    ></input>\r\n                    {!errors.summary ? null : <p>{errors.summary}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <div><label>healthScore: </label></div>\r\n                    <input\r\n                        type={\"number\"}\r\n                        name={\"healthScore\"}\r\n                        value={input.healthScore}\r\n                        onChange={event => handleChange(event)}\r\n                    ></input>\r\n                    {!errors.healthScore ? null : <p>{errors.healthScore}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <div><label>Image: </label></div>\r\n                    <input\r\n                        type={\"url\"}\r\n                        name={\"image\"}\r\n                        value={input.image}\r\n                        onChange={event => handleChange(event)}\r\n                    ></input>\r\n                    {!errors.image ? null : <p>{errors.image}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <div><label>Steps: </label></div>\r\n                    <input\r\n                        type={\"text\"}\r\n                        name={\"steps\"}\r\n                        value={input.steps}\r\n                        onChange={event => handleChange(event)}\r\n                    ></input>\r\n                    {!errors.steps ? null : <p>{errors.steps}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <div><label>Tipos de Dieta: </label></div>\r\n                    <br></br>\r\n                    {props.diets.slice(0, 13).map(d  => {\r\n                        return (\r\n                            <div key={d}>\r\n                                <label> {d[0].toUpperCase() + d.slice(1)} </label>\r\n                                <input type=\"checkbox\" name={d} value={d} onChange={event => handleCheck(event)}></input>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    {!errors.diets ? null : <p>{errors.diets}</p>}\r\n                </div>\r\n\r\n                <div>\r\n                    <div><label>Dieta: </label></div>\r\n                    <input\r\n                        type={\"text\"}\r\n                        name={\"diet\"}\r\n                        value={input.diet}\r\n                        onChange={event => handleChange(event)}\r\n                    ></input>\r\n                    {!errors.diet ? null : <p>{errors.diet}</p>}\r\n                </div>\r\n\r\n                <br></br>\r\n\r\n                <div>\r\n                    <button type=\"summit\"> CREATE</button>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <Link to=\"/home\"><button>Go back</button></Link>\r\n                </div>\r\n                <br></br>\r\n            </form>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        diets: state.diets,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createRecipe: (payload) => dispatch(createRecipe(payload)),\r\n        getDiet: () => dispatch(getDiet()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateRecipe);**/","import React from 'react';\nimport './App.css';\nimport { Route, Switch} from 'react-router-dom';\nimport LandingPage from './Components/LandingPage';\nimport Home from './Components/Home';\nimport CreateRecipe from \"./Components/CreateRecipe\"\n\n\nfunction App() {\n  return (\n      <div className=\"App\">\n         <Switch>\n          <Route exact path={'/'} component={LandingPage}/>\n          <Route exact={'/home'} component={Home}/>\n          <Route exact path={'/recipes'} component={CreateRecipe}/>\n         </Switch>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_RECIPES, GET_RECIPE_BY_NAME, GET_RECIPE_DETAILS, GET_DIET, POST_RECIPE, FILTER_BY_DIET, \r\n    ORDER_BY_ALPHABET, ORDER_BY_SCORE, CLEAR_DETAIL, CLEAR_RECIPES, PAGINATED_ACTION } from \"../Actions/index\";\r\n\r\nconst initialState = {\r\n    recipes: [],\r\n    allRecipes: [],\r\n    dietType: [],\r\n    recipeDetails: [],\r\n    currentPage: [],\r\n}\r\n\r\n\r\n\r\nfunction rootReducer (state = initialState, action){\r\n    switch (action.type) {\r\n        case GET_RECIPES:\r\n            return {\r\n                ...state,\r\n                recipes: action.payload,\r\n                allRecipes: action.payload,\r\n            }\r\n        case GET_RECIPE_BY_NAME:\r\n            return {\r\n                ...state,\r\n                recipes: action.payload,\r\n                currentPage: 1,\r\n            }\r\n        case GET_RECIPE_DETAILS:\r\n            return {\r\n                ...state,\r\n                recipeDetails: action.payload,\r\n            }\r\n        case GET_DIET:\r\n            return {\r\n                ...state,\r\n                dietType: action.payload,\r\n            }\r\n        case FILTER_BY_DIET:\r\n            const allRecipes = state.allRecipes;\r\n            const filterByDiet = action.payload === 'allRecipes' ? allRecipes : allRecipes.filter(r => r.dietType?.some(diet => diet.toLowerCase() === action.payload.toLowerCase()));\r\n            return {\r\n                ...state,\r\n                recipes: filterByDiet,\r\n                currentPage: 1,\r\n            }\r\n        case ORDER_BY_ALPHABET:\r\n            let sortAlphabet = [...state.recipes];\r\n            sortAlphabet = action.payload === 'atoz' ?\r\n            state.recipes.sort(function(a,b) {\r\n                if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;\r\n                if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\r\n                return 0;\r\n            }):\r\n            state.recipes.sort(function(a, b) {\r\n              if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;\r\n              if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\r\n              return 0;\r\n            }); \r\n            return {\r\n                ...state,\r\n                recipes: sortAlphabet,\r\n                currentPage: 1,\r\n            }\r\n        case ORDER_BY_SCORE:\r\n            let sortScore = [...state.recipes];\r\n            sortScore = action.payload === \"asc\" ? \r\n            state.recipes.sort(function(a,b) {\r\n                if (a.healthScore < b.healthScore) return 1;\r\n                if (a.healthScore > b.healthScore) return -1;\r\n                return 0;\r\n            }):\r\n            state.recipes.sort(function(a,b) {\r\n                if (a.healthScore < b.healthScore) return 1;\r\n                if (a.healthScore > b.healthScore) return -1;\r\n                return 0;\r\n            });\r\n            return {\r\n                ...state,\r\n                recipes: sortScore,\r\n                currentPage: 1,\r\n            }\r\n        case POST_RECIPE:\r\n            return {\r\n                ...state,\r\n            }\r\n        case CLEAR_DETAIL:\r\n            return {\r\n                ...state,\r\n                recipeDetails: [],\r\n            }\r\n\r\n        case CLEAR_RECIPES:\r\n            return{\r\n                ...state,\r\n                recipes: action.payload,\r\n            }\r\n        case PAGINATED_ACTION:\r\n            return{\r\n                ...state,\r\n                currentPage: action.payload,\r\n            }\r\n        default: \r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default rootReducer; ","import { legacy_createStore as createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducer\";\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n    );\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './Store/Index';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>,\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}